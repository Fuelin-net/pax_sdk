plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.example.pax_sdk_package"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.pax_sdk_package"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
            jni.srcDirs = []
        }
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging true
        }
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libDeviceConfig.so'
        pickFirst '**/libpaxcanvas.so'
        pickFirst '**/libHDSD.so'
        pickFirst '**/libZBarDecoder.so'
        pickFirst '**/libdecoder_jni.so'
        pickFirst '**/libiconv.so'
        pickFirst '**/libIGLBarDecoder.so'
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            
            // Enable ProGuard for release builds
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Ensure native libraries are included in release builds
            ndk {
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
        }
        
        debug {
            ndk {
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }
}

dependencies {
    implementation files('libs/neptune-lite-api-v3.26.00-20210903.jar')
    implementation files('libs/sdk.jar')
    
}

flutter {
    source = "../.."
}
